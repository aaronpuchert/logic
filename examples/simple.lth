(type person)
((lambda-type statement (list person)) schüler?)
((lambda-type statement (list person)) dumm?)
(person fritz)
(axiom (schüler? fritz))
(axiom (forall (lambda (list (person x)) (impl (schüler? x) (dumm? x)))))
(lemma
	(impl (schüler? fritz) (dumm? fritz))
	(specialization
		(list
			person
			(lambda (list (person x)) (impl (schüler? x) (dumm? x)))
			fritz
		)
		(list this~1)
	)
)
(lemma
	(dumm? fritz)
	(ponens (list (schüler? fritz) (dumm? fritz)) (list this~1 this~3))
)
